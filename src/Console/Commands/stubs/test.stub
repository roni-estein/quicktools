<?php

namespace DummyNamespace;

use App\User;
use Carbon\Carbon;
use Tests\DomainTestCase;
use Illuminate\Foundation\Testing\TestResponse;

class DummyClass extends DomainTestCase
{
    const TEST_ROUTE = 'example.store';

    ////////////////////// TESTS //////////////////////


    /** @test */
    public function an_example_test_where_a_first_name_is_required()
    {
        $this->submitFields(['first_name' => null])
        ->assertSessionHasErrors('first_name');
    }

    ////////////////////// TEST HELPERS //////////////////////

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = $this->basicSignIn(User::first());
    }

    protected function submitFieldsNoExceptions($attributes = []): TestResponse
    {
        return $this
            ->post(route(self::TEST_ROUTE, []), $this->getValidFields($attributes));
    }

    protected function submitFields($attributes = []): TestResponse
    {
        return $this
            ->withExceptionHandling()
            ->post(route(self::TEST_ROUTE, []), $this->getValidFields($attributes));
    }

    protected function getValidFields($attributes = []): array
    {
        $baseArray = [
            'example_field' => true,
            'another_example' => '123 Fake St',
        ];

        return array_merge(
            $baseArray,
            // $otherPossibleFieldSource, // or Example::getOptions(),
            $attributes
        );
    }
}